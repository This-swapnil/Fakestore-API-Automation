{
	"info": {
		"_postman_id": "99dfd873-4924-4cfb-9252-dd8ae99671b1",
		"name": "Products",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45597837",
		"_collection_link": "https://apitest-4784.postman.co/workspace/FakeStoreAPITest~2c19129c-d39c-4855-a40b-4e075f26f92f/collection/45597837-99dfd873-4924-4cfb-9252-dd8ae99671b1?action=share&source=collection_link&creator=45597837"
	},
	"item": [
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"//excepted schema",
							"const expected_schema = {",
							"    \"type\": \"array\",",
							"    \"items\": [",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"integer\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        },",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"price\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"category\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"image\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"rate\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"count\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    },",
							"                    \"required\": [",
							"                        \"rate\",",
							"                        \"count\"",
							"                    ]",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"title\",",
							"                \"price\",",
							"                \"description\",",
							"                \"category\",",
							"                \"image\",",
							"                \"rating\"",
							"            ]",
							"        }",
							"    ]",
							"}",
							"const singleItem_schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"category\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"image\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"rating\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"rate\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"count\": {",
							"                    \"type\": \"integer\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"rate\",",
							"                \"count\"",
							"            ]",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"title\",",
							"        \"price\",",
							"        \"description\",",
							"        \"category\",",
							"        \"image\",",
							"        \"rating\"",
							"    ]",
							"};",
							"",
							"//Validate response type and it is not empty",
							"pm.test(\"Validate response is an array and it is not empty\", () => {",
							"    pm.expect(jsonData).to.be.a(\"array\").and.not.be.empty;",
							"});",
							"",
							"pm.test(\"Lenght of the returned products(20)\", () => {",
							"    pm.expect(jsonData.length).to.be.eql(20);",
							"});",
							"",
							"pm.test(\"Expected JSON schema validation\", () => {",
							"    jsonData.forEach(function (item) {",
							"        pm.expect(item).to.be.jsonSchema(singleItem_schema);",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"//Expected JSON Schema",
							"const expected_schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"id\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"title\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"price\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"description\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"category\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"image\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"rating\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"rate\": {",
							"          \"type\": \"number\"",
							"        },",
							"        \"count\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"rate\",",
							"        \"count\"",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"id\",",
							"    \"title\",",
							"    \"price\",",
							"    \"description\",",
							"    \"category\",",
							"    \"image\",",
							"    \"rating\"",
							"  ]",
							"}",
							"",
							"//Vaidate response returned is an object and not empty",
							"pm.test(\"Validate response is an Object and not empty\",()=>{",
							"    pm.expect(jsonData).to.be.a(\"object\").and.not.be.empty;",
							"});",
							"",
							"//Validate products",
							"pm.test('Expected products validation',()=>{",
							"    pm.expect(jsonData.id).to.be.eql(parseInt(pm.collectionVariables.get(\"id\")));",
							"});",
							"",
							"//Validate JSON Schema",
							"pm.test(\"Validate JSON Schema\",()=>{",
							"    pm.response.to.have.jsonSchema(expected_schema);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Limited Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"//Expedted JSON Schema",
							"const singleProduct_schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"id\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"title\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"price\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"description\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"category\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"image\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"rating\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"rate\": {",
							"          \"type\": \"number\"",
							"        },",
							"        \"count\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"rate\",",
							"        \"count\"",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"id\",",
							"    \"title\",",
							"    \"price\",",
							"    \"description\",",
							"    \"category\",",
							"    \"image\",",
							"    \"rating\"",
							"  ]",
							"}",
							"",
							"",
							"//Product limit validation",
							"pm.test(\"Product limit Validation\",()=>{",
							"    pm.expect(jsonData.length).to.be.eql(pm.collectionVariables.get(\"limit\"));",
							"});",
							"",
							"//JSON Schema Validation",
							"pm.test(\"Validate JSON Schema\",()=>{",
							"    jsonData.forEach(function(item){",
							"        pm.expect(item).to.be.jsonSchema(singleProduct_schema);",
							"    });",
							"});",
							"",
							"//Validate response is an array and not empty",
							"pm.test(\"Validate response is an array\",()=>{",
							"    pm.expect(jsonData).to.be.a(\"array\").and.is.not.empty;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products?limit={{limit}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "limit",
							"value": "{{limit}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Sorted Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"//Expected JSON Schema",
							"const singleItem_schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"category\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"image\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"rating\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"rate\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"count\": {",
							"                    \"type\": \"integer\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"rate\",",
							"                \"count\"",
							"            ]",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"title\",",
							"        \"price\",",
							"        \"description\",",
							"        \"category\",",
							"        \"image\",",
							"        \"rating\"",
							"    ]",
							"};",
							"",
							"//Validate returned items are in sorted order",
							"pm.test(\"Validate returned items are in sorted order\", () => {",
							"    sorting_order = pm.collectionVariables.get(\"sort\");",
							"    if (sorting_order === \"asc\") {",
							"        pm.expect(jsonData[0].id).to.be.eql(1);",
							"    } else if (sorting_order === \"desc\") {",
							"        pm.expect(jsonData[0].id).to.be.eql(20);",
							"    } else {",
							"        throw new Error(\"Unknown sort order: \" + sorting_order);",
							"    }",
							"});",
							"",
							"//Validate response is an array and not empty",
							"pm.test('Validate response is an array and not empty', () => {",
							"    pm.expect(jsonData).to.be.a(\"array\").and.not.be.empty;",
							"});",
							"",
							"//Validate length",
							"pm.test(\"Validate the length of an returnred array\", () => {",
							"    pm.expect(jsonData.length).to.be.eql(20);",
							"});",
							"",
							"//Validate JSON Schema",
							"pm.test(\"Validate JSON Schema\", () => {",
							"    jsonData.forEach(function (item) {",
							"        pm.expect(item).to.be.jsonSchema(singleItem_schema);",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products?sort={{sort}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "sort",
							"value": "{{sort}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product with limit/sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"//Expected Schema",
							"const singleProduct_schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"category\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"image\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"rating\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"rate\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"count\": {",
							"                    \"type\": \"integer\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"rate\",",
							"                \"count\"",
							"            ]",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"title\",",
							"        \"price\",",
							"        \"description\",",
							"        \"category\",",
							"        \"image\",",
							"        \"rating\"",
							"    ]",
							"}",
							"",
							"//Product limit validation",
							"pm.test(\"Products limit validation\", () => {",
							"    pm.expect(jsonData.length).to.be.eql(parseInt(pm.collectionVariables.get(\"limit\")));",
							"});",
							"",
							"//Validate returened item are in sorted order",
							"pm.test(\"Validate returened items are in sorted order\", () => {",
							"    sorting_order = pm.collectionVariables.get(\"sort\");",
							"    if (sorting_order == \"asc\") {",
							"        pm.expect(jsonData[0].id).to.be.eql(1);",
							"    } else {",
							"        pm.expect(jsonData[0].id).to.be.eql(parseInt(pm.collectionVariables.get(\"limit\")));",
							"    };",
							"});",
							"",
							"//Validate JSON Schema",
							"pm.test(\"Validate JSON Schema\", () => {",
							"    jsonData.forEach(function (item) {",
							"        pm.expect(item).to.be.jsonSchema(singleProduct_schema);",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products?sort={{sort}}&limit={{limit}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "sort",
							"value": "{{sort}}"
						},
						{
							"key": "limit",
							"value": "{{limit}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"const expected_schema = {",
							"    \"type\": \"array\",",
							"    \"items\": [",
							"        {",
							"            \"type\": \"string\"",
							"        },",
							"        {",
							"            \"type\": \"string\"",
							"        },",
							"        {",
							"            \"type\": \"string\"",
							"        },",
							"        {",
							"            \"type\": \"string\"",
							"        }",
							"    ]",
							"};",
							"",
							"//Schema Validation",
							"pm.test(\"Expected JSON Schema\",()=>{",
							"    pm.response.to.have.jsonSchema(expected_schema);",
							"});",
							"",
							"//Validate length of Categories",
							"pm.test(\"Validate Length of Categories\",()=>{",
							"    pm.expect(jsonData.length).to.be.eql(4);",
							"});",
							"",
							"//Validate resopnse is an array and not empty",
							"pm.test(\"Validate the response is an array and not empty\",()=>{",
							"    pm.expect(Array.isArray(jsonData)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products/categories",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Specific Categories Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"const singleItem_schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"category\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"image\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"rating\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"rate\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"count\": {",
							"                    \"type\": \"number\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"rate\",",
							"                \"count\"",
							"            ]",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"title\",",
							"        \"price\",",
							"        \"description\",",
							"        \"category\",",
							"        \"image\",",
							"        \"rating\"",
							"    ]",
							"};",
							"",
							"//Validate JSON Schema",
							"pm.test(\"Validate JSON Schema\", () => {",
							"    jsonData.forEach(function (item) {",
							"        pm.expect(item).to.be.jsonSchema(singleItem_schema);",
							"    });",
							"});",
							"",
							"//Validate response is an array and not empty",
							"pm.test(\"Validate response is an array and not empty\", () => {",
							"    pm.expect(jsonData).to.be.an(\"array\").and.is.not.empty;",
							"});",
							"",
							"//Validaet the only products of the given category is returend",
							"pm.test(\"Validate only products of the given category is returned\", () => {",
							"    let category = pm.collectionVariables.get(\"category\");",
							"    jsonData.forEach(function (item) {",
							"        pm.expect(item.category).to.be.eql(category);",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products/category/{{category}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"category",
						"{{category}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"const expected_schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"category\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"image\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"title\",",
							"        \"price\",",
							"        \"description\",",
							"        \"category\",",
							"        \"image\"",
							"    ]",
							"};",
							"",
							"pm.test(\"Validate response is an array and not empty\", () => {",
							"    pm.expect(jsonData).to.be.an(\"object\").and.is.not.empty;",
							"})",
							"",
							"pm.test(\"Response Validation\", () => {",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Expected product Validation\", () => {",
							"    pm.expect(jsonData.id).to.be.eql(21);",
							"    pm.expect(jsonData.title).to.be.eql(pm.collectionVariables.get(\"title\"));",
							"    pm.expect(jsonData.description).to.be.eql(pm.collectionVariables.get(\"description\"));",
							"    pm.expect(jsonData.price).to.be.eql(pm.collectionVariables.get(\"price\"));",
							"    pm.expect(jsonData.image).to.be.eql(pm.collectionVariables.get(\"image\"));",
							"    pm.expect(jsonData.category).to.be.eql(pm.collectionVariables.get(\"category\"));",
							"});",
							"",
							"pm.test(\"JSON Schema Validation\", () => {",
							"    pm.response.to.have.jsonSchema(expected_schema);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"{{title}}\",\n    \"price\": {{price}},\n    \"description\": \"{{description}}\",\n    \"image\": \"{{image}}\",\n    \"category\": \"{{category}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"const expected_schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"category\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"image\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"title\",",
							"        \"price\",",
							"        \"description\",",
							"        \"category\",",
							"        \"image\"",
							"    ]",
							"};",
							"",
							"",
							"pm.test(\"response validation\", function () {",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.id).to.be.a('number')",
							"});",
							"",
							"pm.test(\"response is an object and not empty validation\", function () {",
							"    pm.expect(jsonData).to.be.a('object').and.is.not.empty;",
							"});",
							"",
							"pm.test(\"Expected products validation\", function () {",
							"    pm.expect(jsonData.id).to.be.eql(parseInt(pm.collectionVariables.get(\"id\")));",
							"    pm.expect(jsonData.title).to.be.eql(pm.collectionVariables.get(\"title\"));",
							"    pm.expect(jsonData.description).to.be.eql(pm.collectionVariables.get(\"description\"));",
							"    pm.expect(jsonData.price).to.be.eql(parseFloat(pm.collectionVariables.get(\"price\")));",
							"    pm.expect(jsonData.image).to.be.eql(pm.collectionVariables.get(\"image\"));",
							"    pm.expect(jsonData.category).to.be.eql(pm.collectionVariables.get(\"category\"));",
							"});",
							"",
							"pm.test(\"Expected JSON schema validation\", function () {",
							"    pm.response.to.have.jsonSchema(expected_schema);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"{{title}}\",\n    \"price\": {{price}},\n    \"description\": \"{{description}}\",\n    \"image\": \"{{image}}\",\n    \"category\": \"{{category}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial Update Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"const expected_schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"category\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"image\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"title\",",
							"        \"description\",",
							"        \"category\",",
							"        \"image\"",
							"    ]",
							"};",
							"",
							"",
							"pm.test(\"Response Validation\", () => {",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"",
							"pm.test(\"Validate response is an object and not empty\", () => {",
							"    pm.expect(jsonData).to.be.an(\"object\").and.is.not.empty;",
							"});",
							"",
							"",
							"pm.test(\"Expected Product Validation\", () => {",
							"    pm.expect(jsonData.id).to.be.eql(parseInt(pm.collectionVariables.get(\"id\")));",
							"    pm.expect(jsonData.title).to.be.eql(pm.collectionVariables.get(\"title\"));",
							"    pm.expect(jsonData.description).to.be.eql(pm.collectionVariables.get(\"description\"));",
							"    pm.expect(jsonData.image).to.be.eql(pm.collectionVariables.get(\"image\"));",
							"    pm.expect(jsonData.category).to.be.eql(pm.collectionVariables.get(\"category\"));",
							"});",
							"",
							"pm.test(\"Response Schema Validation\", () => {",
							"    pm.response.to.have.jsonSchema(expected_schema);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"{{title}}\",\n    \"description\": \"{{description}}\",\n    \"image\": \"{{image}}\",\n    \"category\": \"{{category}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"const expected_schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"category\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"image\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"title\",",
							"        \"price\",",
							"        \"description\",",
							"        \"category\",",
							"        \"image\"",
							"    ]",
							"};",
							"",
							"pm.test(\"Response Validation\", () => {",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Validate the response is an object and not empty\", () => {",
							"    pm.expect(jsonData).to.be.an(\"object\").and.is.not.empty;",
							"});",
							"",
							"pm.test(\"Validate JSON Schema\", () => {",
							"    pm.response.to.have.jsonSchema(expected_schema);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Assigne the values from the CSV file to collection level variables",
					"pm.collectionVariables.set(\"id\",pm.iterationData.get(\"id\"));",
					"pm.collectionVariables.set(\"title\",pm.iterationData.get(\"title\"));",
					"pm.collectionVariables.set(\"price\",pm.iterationData.get(\"price\"));",
					"pm.collectionVariables.set(\"description\",pm.iterationData.get(\"description\"));",
					"pm.collectionVariables.set(\"category\",pm.iterationData.get(\"category\"));",
					"pm.collectionVariables.set(\"image\",pm.iterationData.get(\"image\"));",
					"pm.collectionVariables.set(\"rate\",pm.iterationData.get(\"rate\"));",
					"pm.collectionVariables.set(\"count\",pm.iterationData.get(\"count\"));",
					"",
					"const limit=pm.variables.replaceIn('{{$randomInt}}')%20+1;",
					"pm.collectionVariables.set(\"limit\",limit);",
					"",
					"// const order=['desc','asc'];",
					"// pm.collectionVariables.set('sort',order[require('lodash').random(order.length)]);",
					"",
					"",
					"const _ = require('lodash');",
					"const order = ['desc', 'asc'];",
					"const idx = _.random(0, order.length - 1);",
					"pm.collectionVariables.set('sort', order[idx]);",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Validate Status code\",()=>{",
					"    pm.response.to.have.status(200);",
					"})"
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "title",
			"value": ""
		},
		{
			"key": "price",
			"value": ""
		},
		{
			"key": "description",
			"value": ""
		},
		{
			"key": "category",
			"value": ""
		},
		{
			"key": "image",
			"value": ""
		},
		{
			"key": "rate",
			"value": ""
		},
		{
			"key": "count",
			"value": ""
		},
		{
			"key": "limit",
			"value": ""
		},
		{
			"key": "sort",
			"value": ""
		}
	]
}